{"version":3,"sources":["main.css","../node_modules/accoutrement-init/sass/_root.scss","../node_modules/accoutrement-init/sass/_a11y.scss","../node_modules/accoutrement-init/sass/_forms.scss","../node_modules/accoutrement-init/sass/_media.scss","../node_modules/accoutrement-init/sass/_typography.scss","config/_fonts.scss","config/_scale.scss","initial/_root.scss","config/_colors.scss","../node_modules/accoutrement-color/sass/_utils.scss","../node_modules/accoutrement-scale/sass/_utility.scss","../node_modules/accoutrement-scale/sass/_size.scss","../node_modules/accoutrement-type/sass/_a11y.scss","initial/_headings.scss","initial/_icons.scss","layout/_root.scss","layout/_regions.scss","../node_modules/accoutrement-layout/sass/_clearfix.scss","../node_modules/accoutrement-layout/sass/_queries.scss","../node_modules/accoutrement-layout/sass/_z-index.scss","../node_modules/accoutrement-scale/sass/_units.scss","patterns/_type.scss","../node_modules/accoutrement-color/sass/_api.scss","component/_banner.scss","config/_arrow.scss","../node_modules/accoutrement-type/sass/_pseudo-elements.scss","component/_item.scss","component/_nav.scss","../node_modules/accoutrement-layout/sass/_position.scss","component/_project-meta.scss","previews/_color.scss","previews/_examples.scss","previews/_font.scss","previews/_highlight.scss","previews/_icon.scss","previews/_size.scss"],"names":[],"mappings":"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","file":"main.css","sourcesContent":["html{-ms-overflow-style:-ms-autohiding-scrollbar;text-size-adjust:100%}main{display:block}details{display:block}pre{overflow:auto}progress{display:inline-block}summary{display:block}template{display:none}*,::before,::after{border-style:solid;border-width:0;box-sizing:border-box}*{font-size:inherit;line-height:inherit;margin:0;padding:0}table{border-collapse:collapse;border-spacing:0}audio :not([controls]){display:none}[aria-busy='true']{cursor:progress}[aria-controls]{cursor:pointer}[aria-disabled]{cursor:default}[hidden]{display:none}button{overflow:visible}input{border-radius:0;line-height:normal}button,[type='button'],[type='reset'],[type='submit']{appearance:button;cursor:pointer}button::-moz-focus-inner,[type='button']::-moz-focus-inner,[type='reset']::-moz-focus-inner,[type='submit']::-moz-focus-inner{border:0 none !important;padding:0 !important}[type='checkbox'],[type='radio']{box-sizing:border-box;padding:0}[type='number']{width:auto}[type='search']{appearance:textfield}button,input,select,textarea{background-color:transparent;color:inherit;font-family:inherit;font-style:inherit;font-weight:inherit}textarea{overflow:auto;resize:vertical}img{border:0}svg:not(:root){overflow:hidden}audio,canvas,iframe,img,svg,video{max-width:100%;vertical-align:middle}a{background-color:transparent}a:active,a:hover{outline:0}abbr[title]{border-bottom:1px dotted}b,strong{font-weight:bold}code,kbd,pre,samp{font-family:monospace;font-size:inherit}dfn{font-style:italic}nav ol,nav ul{list-style:none}small{font-size:0.75em}sub,sup{font-size:0.75em;line-height:0;position:relative;vertical-align:baseline}sup{top:-0.5em}sub{bottom:-0.25em}:root{font-family:\"Source Sans Pro\",\"Helvetica Neue\",\"Helvetica\",\"Arial\",sans-serif;font-size:18px;font-size:calc(size('root') + 0.25vw);line-height:1.4}[href]:link,[href]:visited{color:#0d7fa5;text-decoration:none}[href]:hover,[href]:focus,[href]:active{color:#0a5f7c;text-decoration:underline}pre,code{font-family:\"Source Code Pro\",\"Consolas\",\"Menlo\",\"Monaco\",\"Lucida Console\",\"Liberation Mono\",\"DejaVu Sans Mono\",\"Bitstream Vera Sans Mono\",\"Courier New\",monospace,sans-serif;font-size:calc(.75rem + .25vw)}code{background-color:#fcfcfc;border-radius:3px;box-shadow:0 0 .35rem rgba(88,127,141,0.2) inset;color:#587f8d;display:inline-block;padding:0 .35rem}pre code{background-color:transparent;border-radius:0;box-shadow:none;display:block;padding:0}.visually-hidden{clip:rect(1px, 1px, 1px, 1px);clip-path:inset(1px 1px 1px 1px);height:1px;overflow:hidden;pointer-events:none;position:absolute;width:1px}[data-sassdoc='project-title']{align-items:baseline;display:flex;font-size:calc(1rem + 2.5vw);margin-left:auto;margin-right:auto}[data-sassdoc='project-name']{padding-left:.35rem;padding-right:.35rem}[data-sassdoc='project-name'],[data-sassdoc='project-name']:link,[data-sassdoc='project-name']:visited{color:#0d7fa5}[data-sassdoc='project-name']:hover,[data-sassdoc='project-name']:focus,[data-sassdoc='project-name']:active{color:#0a5f7c;text-decoration:none}[data-icon-size='icon-small']{height:28px;width:28px}html,body{overflow-x:hidden}[data-sassdoc-region]{width:100%}[data-sassdoc-region='app']{display:flex;flex-direction:column;height:100%;margin:0 auto;min-height:100vh;padding:0}[data-sassdoc-region='container']{display:flex;flex:1 1 auto;position:relative}[data-sassdoc-region='container']::after{clear:both;content:' ';display:block}@media (min-width: 50rem){[data-sassdoc-region='container']{justify-content:flex-end}}[data-nav-menu]{background-color:#0d7fa5;color:#fff;z-index:3;margin:0;padding:1.4rem;white-space:nowrap}[data-sassdoc-region='breadcrumb']{background:#cfe5ed;padding:.7rem calc(.7rem + 2.5vw)}@media (max-width: 31.99rem){[data-sassdoc-region='breadcrumb']{padding-top:calc(.7rem + 2.5vw)}}[data-sassdoc-region='breadcrumb'] a,[data-sassdoc-region='breadcrumb'] span,[data-sassdoc-region='breadcrumb'] strong{display:inline-block}[role='main']{z-index:2;width:100%}@media (min-width: 50rem){[role='main']{overflow:hidden}}[data-sassdoc-region='main']{padding:1.4rem calc(.7rem + 2.5vw);position:relative}.text-block{max-width:90ch}.text-block h1,.text-block h2,.text-block h3,.text-block h4{color:#3b4042;margin-bottom:.7rem}.text-block h1{font-size:calc(1rem + 2vw)}.text-block h2{font-size:calc(1rem + 1.5vw)}.text-block p{margin:.7rem 0 1.4rem}.text-block ol,.text-block ul{margin:.7rem 1.4rem 1.4rem}.text-block li>p{margin:.35rem 0}.text-block blockquote{border-left:.35rem solid #dedede;font-size:calc(1rem + .5vw);padding-left:1.05rem}.text-block blockquote>:first-child{text-indent:-0.4em}.text-block blockquote>:nth-last-child(2){margin-bottom:.7rem}.text-block blockquote>:last-child{margin-top:.7rem}.text-block blockquote cite{display:block;font-size:calc(.88889rem + .25vw)}[data-sassdoc-region='banner']{border-bottom:8px solid #0d7fa5;display:block;position:relative;width:100%;z-index:4;box-shadow:0 2px 2px rgba(85,91,94,0.5);display:flex;padding:.7rem}[data-sassdoc-region='banner']::before,[data-sassdoc-region='banner']::after{content:\" \";border:1.4rem solid transparent;border-bottom-width:0;border-top-color:#0d7fa5;left:50%;position:absolute;top:100%}[data-sassdoc-region='banner']::before{content:\" \";margin-top:8px;transform:translateX(-50%) translateY(-2px)}[data-sassdoc-region='banner']::after{content:\" \";border-top-color:#fff;transform:translateX(-50%) translateY(-4px)}[data-sassdoc='project-version']{font-family:\"Source Sans Pro\",\"Helvetica Neue\",\"Helvetica\",\"Arial\",sans-serif;color:#555b5e;font-size:calc(.88889rem + .5vw);font-weight:normal}.item{margin-bottom:8.4rem}[data-item-section]{margin-bottom:2.8rem}[data-item-section='header']{margin:1.4rem 0}.item-title{font-size:calc(1rem + 1.5vw)}.item-subtitle{border-bottom:1px solid #dedede;color:#555b5e;font-size:calc(.88889rem + .25vw);font-weight:normal;letter-spacing:0.05em;margin-bottom:.7rem;text-transform:uppercase}.item-type,.item-name,.item-value,.alias-title{font-family:\"Source Code Pro\",\"Consolas\",\"Menlo\",\"Monaco\",\"Lucida Console\",\"Liberation Mono\",\"DejaVu Sans Mono\",\"Bitstream Vera Sans Mono\",\"Courier New\",monospace,sans-serif;display:inline-block}.item-type,.item-value,.value-type,.item-note{color:#555b5e;display:inline-block;font-weight:normal}.alias{color:#555b5e;font-style:italic}.alias-title{font-style:normal;font-weight:bold}.param-list{margin-bottom:.7rem}.param-title{color:#555b5e;font-size:calc(.88889rem + .5vw)}.param-details{margin-top:.35rem}@media (min-width: 32rem){.param-details{margin-left:1.4rem}}.summary-subtitle{color:#555b5e;margin:1.4rem 0 .35rem}@media (min-width: 32rem){.requires-wrapper{display:flex}.requires-wrapper [data-item-section]{flex:1 1 40%;max-width:100%}.requires-wrapper [data-item-section]:first-child{margin-right:1.4rem}}[data-nav-menu='small']{bottom:0;position:absolute;top:0;box-shadow:0 0 .35rem rgba(85,91,94,0.5);transform:translatex(-102%);transition:transform 0.4s;width:100%}[data-nav-menu='small'][aria-expanded='true']{transform:translatex(0)}@media (max-width: 20.99rem){[data-nav-menu='small']{align-content:flex-start;display:flex;flex-direction:row;flex-wrap:wrap}}@media (min-width: 21rem){[data-nav-menu='small']{width:auto}}@media (min-width: 50rem){[data-nav-menu='small']{display:none}}[data-nav-menu='large']{flex:0 1 0;margin-left:-100%;transition:margin-left 0.4s}[data-nav-menu='large'][aria-expanded='true']{margin-left:0}@media (max-width: 49.99rem){[data-nav-menu='large']{display:none}}@media (min-width: 50rem){[data-nav-toggle='small']{display:none}}@media (max-width: 49.99rem){[data-nav-toggle='large']{display:none}}[data-nav-toggle]{fill:#0d7fa5;padding:.35rem}@media (min-width: 50rem){[data-nav-toggle]{padding-left:.7rem;padding-right:.7rem}}[data-nav-toggle]:hover,[data-nav-toggle]:focus,[data-nav-toggle]:active{fill:#0a5f7c}[data-sassdoc='nav-item']{list-style:none;margin-bottom:.7rem}@media (max-width: 20.99rem){[data-sassdoc='nav-item']{width:50%}[data-sassdoc='nav-item']:nth-of-type(2n){padding-right:1rem}}[data-sassdoc='nav-title']{font-weight:bold;margin:.35rem 0 .7rem;padding-top:.7rem;width:100%}[data-sassdoc='nav-title']:nth-of-type(n+2){border-top:1px solid #cfe5ed;margin-top:1.4rem;padding-top:1.4rem}[data-sassdoc-nav]:link,[data-sassdoc-nav]:visited{color:#fff;line-height:1.1;padding-bottom:.175rem;position:relative;text-decoration:none;transition:color 0.4s}[data-sassdoc-nav]:link::before,[data-sassdoc-nav]:visited::before{content:\"\";bottom:0;left:0;position:absolute;background:#cfe5ed;height:4px;transform:scale3d(0, 1, 1);transform-origin:center left;transition:transform 0.4s cubic-bezier(0.22, 0.61, 0.36, 1);transition-delay:0.2s;width:100%}[data-sassdoc-nav]:hover::before,[data-sassdoc-nav]:focus::before,[data-sassdoc-nav]:active::before{content:\"\";transform:scale3d(1, 1, 1);transition-delay:0s}[data-sassdoc-nav][data-sassdoc-nav='is-active']:link::before,[data-sassdoc-nav][data-sassdoc-nav='is-active']:visited::before,[data-sassdoc-nav][data-sassdoc-nav='is-active']:hover::before,[data-sassdoc-nav][data-sassdoc-nav='is-active']:focus::before,[data-sassdoc-nav][data-sassdoc-nav='is-active']:active::before{content:\"\";transform:scale3d(1, 1, 1);transition-delay:0s}.project-links{display:flex;justify-content:flex-end;margin-left:0;margin-right:0}@media (max-width: 35.99rem){.project-links{margin-bottom:.7rem}}.project-link-item{display:flex;list-style:none}.project-link-item+.project-link-item{margin-left:.7rem}@media (max-width: 35.99rem){.project-link-start{margin-right:auto}}.project-link{border:1px solid #0d7fa5;border-radius:1.4rem;font-size:calc(.88889rem + .25vw);line-height:1.6;padding:.35rem 1.4rem;text-align:center;transition:background-color 0.4s}.project-link:hover,.project-link:focus,.project-link:active{background-color:#0d7fa5;color:#fff;text-decoration:none}.color-palette{display:flex;flex-wrap:wrap;margin:-.7rem}@supports (display: grid){.color-palette{display:grid;grid-auto-rows:auto;grid-gap:1.4rem;grid-template-columns:repeat(auto-fit, minmax(calc(15em + 0.25vw), 1fr));margin:0}}.color-preview{align-items:stretch;display:flex;flex:1 0 calc(15em + 0.25vw);flex-direction:column;font-size:calc(.75rem + .25vw);margin:.7rem}@supports (display: grid){.color-preview{margin:0}}.color-swatch{border:1px solid #555b5e;height:5.6rem;min-width:5.6rem;position:relative}.transparency-grid,.color-overlay{bottom:0;left:0;position:absolute;right:0;top:0}.transparency-grid{background:url('data:image/svg+xml;utf8,<svg version=\"1.1\" xmlns=\"http://www.w3.org/2000/svg\" x=\"0px\" y=\"0px\" viewBox=\"0 0 20 20\"><rect width=\"10\" height=\"10\"/><rect x=\"10\" y=\"10\" width=\"10\" height=\"10\"/></svg>') center repeat scroll;background-size:0.5em 0.5em;left:50%}.color-name,.color-value{display:block;padding:.35rem}.color-name-option{display:inline-block}.color-value{color:#555b5e;font-size:calc(.675rem + .25vw);white-space:nowrap}.color-value+.color-value{margin-top:.35rem}.example{margin-bottom:1.4rem}.example-code{align-items:stretch;border:1px solid #cfe5ed;display:flex;flex-wrap:wrap;overflow:hidden}.example-code [data-sassdoc='hljs']{margin-bottom:0}.example-code[aria-hidden='true']{display:none}.code-block{align-items:stretch;display:flex;flex:1 1 20em;flex-direction:column;max-height:16.8rem;max-width:100%;overflow:auto}.code-block+.code-block{border-left:1px solid #cfe5ed}.code-header{background-color:#cfe5ed;color:#3b4042;flex:0 0 auto;font-size:calc(.88889rem + .25vw);padding:0 .7rem}.code-header+[data-sassdoc='hljs']{flex:1 1 auto}.code-description{font-size:calc(.88889rem + .25vw)}.code-description::before{content:\" – \"}.example-render{border:1px solid #dedede;border-top:0;padding:.7rem}.sassdoc{overflow:visible}[data-sassdoc-font]{margin:4.2rem 0 1.4rem}[data-sassdoc='font-type']{font-size:calc(1rem + 1.5vw);font-weight:bold}[data-sassdoc='font-stack']{font-family:\"Source Code Pro\",\"Consolas\",\"Menlo\",\"Monaco\",\"Lucida Console\",\"Liberation Mono\",\"DejaVu Sans Mono\",\"Bitstream Vera Sans Mono\",\"Courier New\",monospace,sans-serif;font-size:calc(.88889rem + .25vw)}[data-specimen-face]{margin:.7rem 0}[data-specimen='sample']{align-items:center;display:flex;flex-wrap:wrap;justify-content:space-between}[data-specimen='aa'],[data-specimen='lorem']{padding:0 .7rem}[data-specimen='aa']{flex:0 1 auto;font-size:4.2rem}[data-specimen='lorem']{flex:1 1 auto}[data-specimen='lorem'] span{display:block}[data-sassdoc='hljs'],.text-block pre{align-items:stretch;background-color:#fcfcfc;color:#587f8d;display:flex;position:relative}[data-sassdoc='hljs'] code,.text-block pre code{flex:0 0 100%;overflow-x:auto;padding:.7rem;padding-right:1.4rem}[data-sassdoc='hljs']::before,.text-block pre::before{content:\" \";bottom:0;left:0;position:absolute;right:0;top:0;background:linear-gradient(to top, #fcfcfc .175rem, rgba(252,252,252,0) .7rem),linear-gradient(to right, #fcfcfc .175rem, rgba(252,252,252,0) .7rem),linear-gradient(to bottom, #fcfcfc .175rem, rgba(252,252,252,0) .7rem),linear-gradient(to left, #fcfcfc .35rem, rgba(252,252,252,0) 2.1rem) no-repeat scroll;box-shadow:0 0 .35rem rgba(88,127,141,0.2) inset;pointer-events:none}[data-sassdoc-page='index'] pre{margin-bottom:1.4rem}.hljs-comment,.hljs-quote{color:#93a1a1}.hljs-keyword,.hljs-selector-tag,.hljs-addition{color:#859900}.hljs-number,.hljs-string,.hljs-meta .hljs-meta-string,.hljs-literal,.hljs-doctag,.hljs-regexp{color:#2aa198}.hljs-title,.hljs-section,.hljs-name,.hljs-selector-id,.hljs-selector-class{color:#268bd2}.hljs-attribute,.hljs-attr,.hljs-variable,.hljs-template-variable,.hljs-class .hljs-title,.hljs-type{color:#b58900}.hljs-symbol,.hljs-bullet,.hljs-subst,.hljs-meta,.hljs-meta .hljs-keyword,.hljs-selector-attr,.hljs-selector-pseudo,.hljs-link{color:#cb4b16}.hljs-built_in,.hljs-deletion{color:#dc322f}.hljs-formula{background:#eee8d5}.hljs-emphasis{font-style:italic}.hljs-strong{font-weight:bold}[data-sassdoc='icon-preview']{display:flex;flex-wrap:wrap;justify-content:space-between;margin:1.4rem -.7rem}[data-sassdoc-icon]{color:#555b5e;flex:1 1 15%;margin:1.4rem .7rem;min-width:7rem}[data-sassdoc-icon] [data-icon]{height:calc(1rem + 2.5vw);width:calc(1rem + 2.5vw)}[data-sassdoc='icon-info']{font-size:calc(.88889rem + .25vw);padding:.35rem 0;white-space:nowrap}[data-sassdoc='icon-name']{color:#3b4042;font-weight:bold;text-transform:uppercase}[data-sassdoc='icon-path']{font-family:\"Source Code Pro\",\"Consolas\",\"Menlo\",\"Monaco\",\"Lucida Console\",\"Liberation Mono\",\"DejaVu Sans Mono\",\"Bitstream Vera Sans Mono\",\"Courier New\",monospace,sans-serif}[data-sassdoc='ratio-demos']{line-height:1.2;overflow-x:auto;padding:.35rem;white-space:nowrap}[data-sassdoc='size-demos']{margin-bottom:1.4rem}[data-sassdoc='size-details']{font-family:\"Source Code Pro\",\"Consolas\",\"Menlo\",\"Monaco\",\"Lucida Console\",\"Liberation Mono\",\"DejaVu Sans Mono\",\"Bitstream Vera Sans Mono\",\"Courier New\",monospace,sans-serif;font-size:calc(.88889rem + .25vw)}[data-sassdoc='size-value']{color:#555b5e}[data-size-demo]{margin-bottom:.7rem}[data-size-demo='text']{overflow:hidden;padding:.35rem;white-space:nowrap}[data-size-demo='ruler']{background:linear-gradient(to right, currentColor 50%, transparent 50%);background-size:2em auto;height:1em}\n","// Root Init\n// =========\n\n\n/// Prevent iOS and IE text size adjust after device orientation change.\n///\n/// - Overflow-style: Edge 12+, Internet Explorer 11-\n/// @group general\nhtml {\n  -ms-overflow-style: -ms-autohiding-scrollbar; // sass-lint:disable-line no-vendor-prefixes\n  text-size-adjust: 100%;\n}\n\n\n/// - Android 4.3-\n/// - Internet Explorer 11-\n/// - Windows Phone 8.1+\n/// @group general\nmain {\n  display: block;\n}\n\n\n/// - Edge 12+\n/// - Firefox 40+\n/// - Internet Explorer 11-\n/// - Windows Phone 8.1+\n/// @group general\ndetails {\n  display: block;\n}\n\n\n/// Internet Explorer 11-\n/// @group general\npre {\n  overflow: auto;\n}\n\n\n/// - Internet Explorer 11-\n/// - Windows Phone 8.1+\n/// @group general\nprogress {\n  display: inline-block;\n}\n\n\n/// - Firefox 40+\n/// - Internet Explorer 11-\n/// - Windows Phone 8.1+\n/// @group general\nsummary {\n  display: block;\n}\n\n\n/// - Android 4.3-\n/// - Internet Explorer 11-\n/// - iOS 7-\n/// - Safari 7-\n/// - Windows Phone 8.1+\n/// @group general\ntemplate {\n  display: none;\n}\n\n\n/// Specify the border style, width, and box-sizing of all elements.\n/// @group general\n*,\n::before,\n::after {\n  border-style: solid;\n  border-width: 0;\n  box-sizing: border-box;\n}\n\n\n/// Specify the core styles of all elements.\n/// @group general\n* {\n  font-size: inherit;\n  line-height: inherit;\n  margin: 0;\n  padding: 0;\n}\n\n\n/// Specify the border styling of tables.\n/// @group general\ntable {\n  border-collapse: collapse;\n  border-spacing: 0;\n}\n","// Accessibility Init\n// ==================\n\n\n/// Chrome 44-, iOS 8+, Safari 9+\n/// @group a11y\naudio {\n  :not([controls]) {\n    display: none;\n  }\n}\n\n\n/// Specify the progress cursor of updating elements.\n/// @group a11y\n[aria-busy='true'] {\n  cursor: progress;\n}\n\n\n/// Specify the pointer cursor of trigger elements.\n/// @group a11y\n[aria-controls] {\n  cursor: pointer;\n}\n\n\n/// Specify the unstyled cursor of disabled,\n/// not-editable, or otherwise inoperable elements.\n/// @group a11y\n[aria-disabled] {\n  cursor: default;\n}\n\n\n/// Internet Explorer 10-\n/// @group a11y\n[hidden] {\n  display: none;\n}\n","// Forms Init\n// ==========\n\n\n/// Internet Explorer 11-\n/// @group forms\nbutton {\n  overflow: visible;\n}\n\n\n/// - Border-radius: iOS 8+ |\n/// - Line-height: Firefox 4+\n/// @group forms\ninput {\n  border-radius: 0;\n  line-height: normal;\n}\n\n\n/// Appearance, cursors, and inner-focus\n/// for buttons and button-like inputs.\n///\n/// - Appearance: iOS 8+\n/// @group forms\nbutton,\n[type='button'],\n[type='reset'],\n[type='submit'] {\n  appearance: button;\n  cursor: pointer;\n\n  // sass-lint:disable no-vendor-prefixes, no-important\n  &::-moz-focus-inner {\n    border: 0 none !important;\n    padding: 0 !important;\n  }\n}\n\n\n/// Address box sizing set to `content-box` in IE 8/9/10.\n/// Remove excess padding in IE 8/9/10.\n/// @group forms\n[type='checkbox'],\n[type='radio'] {\n  box-sizing: border-box;\n  padding: 0;\n}\n\n\n/// Firefox 36+\n/// @group forms\n[type='number'] {\n  width: auto;\n}\n\n\n/// Chrome 45+, Safari 9+\n/// @group forms\n[type='search'] {\n  appearance: textfield;\n}\n\n\n/// Specify the background-color,\n/// and the inherited color/font of form elements.\n/// @group forms\nbutton,\ninput,\nselect,\ntextarea {\n  background-color: transparent;\n  color: inherit;\n  font-family: inherit;\n  font-style: inherit;\n  font-weight: inherit;\n}\n\n\n/// Remove default vertical scrollbar in IE 8/9/10/11,\n/// and specify the resizability of textareas.\n/// @group forms\ntextarea {\n  overflow: auto;\n  resize: vertical;\n}\n","// Media Init\n// ==========\n\n\n/// Remove border when inside `a` element in IE 8/9/10.\n/// @group media\nimg {\n  border: 0;\n}\n\n\n/// Internet Explorer 11-\n/// @group media\nsvg {\n  &:not(:root) {\n    overflow: hidden;\n  }\n}\n\n\n/// Specify the alignment of media elements.\n/// @group media\naudio,\ncanvas,\niframe,\nimg,\nsvg,\nvideo {\n  max-width: 100%;\n  vertical-align: middle;\n}\n","// Typography Init\n// ===============\n\n\n/// Remove the gray background color from active links in IE 10.\n/// Improve readability of focused elements\n/// when they are also in an active/hover state.\n/// @group type\na {\n  background-color: transparent;\n\n  &:active,\n  &:hover {\n    outline: 0;\n  }\n}\n\n\n/// Address styling not present in IE 8/9/10/11, Safari, and Chrome.\n/// @group type\nabbr {\n  &[title] {\n    border-bottom: 1px dotted;\n  }\n}\n\n\n/// Address style set to `bolder` in Firefox 4+, Safari, and Chrome.\n/// @group type\nb,\nstrong {\n  font-weight: bold;\n}\n\n\n/// Specify the font family of code elements.\n/// @group type\ncode,\nkbd,\npre,\nsamp {\n  font-family: monospace;\n  font-size: inherit;\n}\n\n\n/// Address styling not present in Safari and Chrome.\n/// @group type\ndfn {\n  font-style: italic;\n}\n\n\n/// Remove list style of nav lists.\n/// @group type\nnav {\n  ol,\n  ul {\n    list-style: none;\n  }\n}\n\n\n/// All browsers…\n/// @group type\nsmall {\n  font-size: 0.75em;\n}\n\n\n/// Prevent `sub` and `sup` affecting `line-height` in all browsers.\n/// @group type\nsub,\nsup {\n  font-size: 0.75em;\n  line-height: 0;\n  position: relative;\n  vertical-align: baseline;\n}\n\n\n/// Move super-script up.\n/// @group type\nsup {\n  top: -0.5em;\n}\n\n\n/// Move sub-script down.\n/// @group type\nsub {\n  bottom: -0.25em;\n}\n","// Font Settings\n// =============\n\n\n// Font Formats\n// ------------\n/// The font-formats that we want to import\n///\n/// @group z_config-fonts\n/// @link http://oddbird.net/accoutrement-type/docs/\n///   Accoutrement Type\n$font-formats: 'woff' 'ttf';\n\n\n// Sans Font\n// ---------\n/// A clean sans-serif option\n/// used for smaller text like captions and labels.\n///\n/// @preview font-specimen; key: sans; show: regular, bold, italic, bold italic\n/// @group z_config-fonts\n/// @link http://oddbird.net/accoutrement-type/docs/\n///   Accoutrement Type\n$sans-font: (\n  'name': 'Source Sans Pro',\n  'source': 'https://fonts.google.com/specimen/Source+Sans+Pro',\n  'stack': ('Helvetica Neue', 'Helvetica', 'Arial', sans-serif),\n);\n\n@include config('font', 'sans', $sans-font);\n\n\n// Code Font\n// ---------\n/// A readable monospace font for code previews.\n///\n/// @preview font-specimen; key: code; show: regular, bold\n/// @group z_config-fonts\n/// @link http://oddbird.net/accoutrement-type/docs/\n///   Accoutrement Type\n$code-font: (\n  'name': 'Source Code Pro',\n  'source': 'https://fonts.google.com/specimen/Source+Code+Pro',\n  'stack': ('Consolas', 'Menlo', 'Monaco', 'Lucida Console', 'Liberation Mono', 'DejaVu Sans Mono', 'Bitstream Vera Sans Mono', 'Courier New', monospace, sans-serif),\n);\n\n@include config('font', 'code', $code-font);\n","// Scale Settings\n// ==============\n\n\n// Text Ratios\n// -----------\n/// A set of standard ratios\n/// for creating text rhythm and modular-scales.\n///\n/// @group z_config-scale\n/// @preview ratios\n/// @link http://oddbird.net/accoutrement-scale/docs/\n///   Accoutrement Scale\n$text-ratios: (\n  'herman': 1.4\n);\n\n@include config('ratios', 'text-ratios', $text-ratios);\n\n\n// Text Sizes\n// ----------\n/// A set of standard text sizes.\n///\n/// @group z_config-scale\n/// @preview sizes\n/// @link http://oddbird.net/accoutrement-scale/docs/\n///   Accoutrement Scale\n$text-sizes: (\n  'root': 18px,\n\n  'large-rem': 20px ('convert-units': 'rem'),\n  'base-rem': 'root' ('convert-units': 'rem'),\n  'small-rem': 16px ('convert-units': 'rem'),\n  'xsmall-rem': 'base-rem' ('times': 0.75),\n\n  'large': calc(%s + %s) ('base-rem', 1.5vw),\n  'medium': calc(%s + %s) ('base-rem', 0.5vw),\n  'base': calc(%s + %s) ('small-rem', 0.5vw),\n  'small': calc(%s + %s) ('small-rem', 0.25vw),\n  'xsmall': calc(%s + %s) ('xsmall-rem', 0.25vw),\n  'code': 'xsmall',\n  'small-code': calc(%s + %s) ('base-rem' ('times': 0.675), 0.25vw),\n\n  'h1': calc(%s + %s) ('base-rem', 2.5vw),\n  'h2': calc(%s + %s) ('base-rem', 2vw),\n  'h3': 'large',\n  'quote': 'medium',\n);\n\n@include config('sizes', 'text-sizes', $text-sizes);\n\n\n// Spacing Sizes\n// -------------\n/// A set of standard spacing sizes.\n///\n/// @group z_config-scale\n/// @preview sizes; style: ruler\n/// @link http://oddbird.net/accoutrement-scale/docs/\n///   Accoutrement Scale\n$spacing-sizes: (\n  'rhythm': 'root' ('herman': 1, 'convert-units': 'rem'),\n  'gutter': 'rhythm',\n  'flex-gutter': calc(%s + %s) ('shim', 2.5vw),\n  'double-gutter': 'gutter' ('linear': 2),\n  'spacer': 'gutter' ('linear': 3),\n  'double-spacer': 'spacer' ('linear': 2),\n  'shim': 'gutter' ('linear': 0.5),\n  'half-shim': 'shim' ('linear': 0.5),\n  'quarter-shim': 'shim' ('linear': 0.25)\n);\n\n@include config('sizes', 'spacing-sizes', $spacing-sizes);\n\n\n// Pattern Sizes\n// -------------\n/// A set of pattern-specific sizes,\n/// that can be applied to various components.\n///\n/// @group z_config-scale\n/// @preview sizes; style: output-only\n/// @link http://oddbird.net/accoutrement-scale/docs/\n///   Accoutrement Scale\n$pattern-sizes: (\n  'border': 8px,\n  'page': 50rem,\n\n  'nav-small': 21rem,\n  'nav-medium': 32rem,\n\n  'project-link-nav': 36rem,\n  'specimen': 'rhythm' ('linear': 3),\n  'color-preview': calc(15em + 0.25vw), // trial and error…\n  'color-swatch': 'rhythm' ('linear': 4),\n  'icon': 28px,\n  'nav-underline': 4px,\n);\n\n@include config('sizes', 'pattern-sizes', $pattern-sizes);\n","// Root\n// ====\n\n:root {\n  @include font-family('sans');\n  font-size: size('root');\n  font-size: calc(size('root') + 0.25vw); //sass-lint:disable-line no-duplicate-properties\n  line-height: ratio('herman');\n}\n\n\n// Links\n// -----\n\n[href] {\n  #{$link} {\n    color: color('action');\n    text-decoration: none;\n  }\n\n  #{$focus} {\n    color: color('focus');\n    text-decoration: underline;\n  }\n}\n\n\n// Code\n// ----\npre,\ncode {\n  @include font-family('code');\n  font-size: size('code');\n}\n\ncode {\n  background-color: color('slight');\n  border-radius: 3px;\n  box-shadow: 0 0 size('half-shim') color('code-shadow') inset;\n  color: color('code');\n  display: inline-block;\n  padding: 0 size('half-shim');\n\n  pre & {\n    background-color: transparent;\n    border-radius: 0;\n    box-shadow: none;\n    display: block;\n    padding: 0;\n  }\n}\n\n.visually-hidden {\n  @include is-hidden;\n}\n","// Color Settings\n// ==============\n\n\n// Brand Colors\n// ------------\n/// We use bright primary colors for the main brand,\n/// everything else is based on these colors.\n///\n/// @preview color-palette\n/// @group z_config-colors\n/// @link http://oddbird.net/accoutrement-color/docs/\n///   Accoutrement Color\n///\n/// @type Map\n/// @prop {Color | String | List} '<color-name>' -\n///   Each `<color-name>` key can be assigned a color\n///   or previously-defined key,\n///   followed by an optional map of adjustments\n///   (as defined in\n///   [Accoutrement-Color](http://oddbird.net/accoutrement-color/docs/)).\n$brand-colors: (\n  'brand-orange': hsl(24, 100%, 39%),\n  'brand-blue': hsl(195, 85%, 35%),\n  'brand-pink': hsl(330, 85%, 48%),\n);\n\n@include config('colors', 'brand-colors', $brand-colors);\n\n// Neutral Colors\n// --------------\n/// Use these neutral colors\n/// to create structure and hierarchy in the document.\n///\n/// @preview color-palette\n/// @group z_config-colors\n/// @link http://oddbird.net/accoutrement-color/docs/\n///   Accoutrement Color\n$neutral-colors: (\n  'light-gray': 'brand-blue' ('tint': 80%, 'desaturate': 80%),\n  'gray': 'brand-blue' ('desaturate': 80%),\n  'black': 'brand-blue' ('shade': 30%, 'desaturate': 80%),\n);\n\n@include config('colors', 'neutral-colors', $neutral-colors);\n\n\n// Status Colors\n// -------------\n/// These status colors for UI elements\n/// give a quick sense of progress, warning, or errors.\n///\n/// @preview color-palette\n/// @group z_config-colors\n/// @link http://oddbird.net/accoutrement-color/docs/\n///   Accoutrement Color\n$status-colors: (\n  'go': hsl(75, 65%, 30%),\n  'yield': 'brand-orange',\n  'stop': hsl(0, 85%, 50%),\n);\n\n@include config('colors', 'status-colors', $status-colors);\n\n\n// Theme Colors\n// ------------\n/// Applying the brand and accent colors\n/// to a sitewide theme.\n///\n/// @preview color-palette\n/// @group z_config-colors\n/// @link http://oddbird.net/accoutrement-color/docs/\n///   Accoutrement Color\n$theme-colors: (\n  'theme-dark': 'brand-blue',\n  'theme-light': 'brand-blue' ('tint': 80%),\n\n  'background': #fff,\n  'text': 'black',\n  'text-light': 'gray',\n  'border': 'gray',\n  'light-border': 'light-gray',\n  'callout': 'light-gray',\n  'overlay': 'callout' ('rgba': 0.9),\n  'shadow': 'gray' ('rgba': 0.5),\n  'action': 'theme-dark',\n  'focus': 'action' ('shade': 25%),\n  'active': 'action',\n  'accent': 'brand-pink',\n  'slight': 'light-gray' ('tint': 90%),\n  'code': hsl(196, 23%, 45%),\n  'code-shadow': 'code' (rgba: 0.2),\n);\n\n@include config('colors', 'theme-colors', $theme-colors);\n\n\n// System Colors\n// -------------\n/// Colors used by accoutrement-color\n/// to calculate contrast ratios.\n///\n/// @preview color-palette\n/// @group z_config-colors\n/// @link http://oddbird.net/accoutrement-color/docs/\n///   Accoutrement Color\n$system-colors: (\n  'contrast-light': 'background',\n  'contrast-dark': 'text',\n);\n\n@include config('colors', 'system-colors', $system-colors);\n","// Color Utilities\n// ===============\n\n\n// Tint\n// ----\n/// Mix a color with `white` to get a lighter tint.\n///\n/// @group util\n///\n/// @param {String | list} $color -\n///   The name of a color in your palette,\n///   with optional adjustments in the form of `(<function-name>: <args>)`.\n/// @param {Percentage} $percentage -\n///   The percentage of white to mix in.\n///   Higher percentages will result in a lighter tint.\n/// @return {Color} -\n///   A calculated css-ready color-value based on your global color palette.\n@function tint(\n  $color,\n  $percentage\n) {\n  $color: color($color);\n\n  @return mix(#fff, $color, $percentage);\n}\n\n\n// Shade\n// -----\n/// Mix a color with `black` to get a darker shade.\n///\n/// @group util\n///\n/// @param {String | list} $color -\n///   The name of a color in your palette,\n///   with optional adjustments in the form of `(<function-name>: <args>)`.\n/// @param {Percentage} $percentage -\n///   The percentage of black to mix in.\n///   Higher percentages will result in a darker shade.\n/// @return {Color} -\n///   A calculated css-ready color-value based on your global color palette.\n@function shade(\n  $color,\n  $percentage\n) {\n  $color: color($color);\n\n  @return mix(#000, $color, $percentage);\n}\n\n\n// Get Function\n// ------------\n/// Get a first-class function in Sass 3.5+,\n/// or the function name string (unchanged)\n/// in older Sass versions.\n/// This is safe to use internally,\n/// as it allows users to pass in\n/// either a string, or a previously-captured function.\n///\n/// @access private\n///\n/// @param {String | Function} $function -\n///   The name (string) of a function,\n///   or the function to be called.\n/// @return {String | Function} -\n///   Returns a first-class function in Sass 3.5+,\n///   or the function name string in older Sass versions.\n@function _ac-color-get-function(\n  $function\n) {\n  $type: type-of($function);\n  $local: ('tint', 'shade');\n\n  @if ($type == 'function') {\n    @return $function;\n  } @else if ($type == 'string') and function-exists('get-function') {\n    @if index($local, $function) {\n      @return get-function($function);\n    }\n\n    @error '[#{$type}] `#{$function}` must be a first-class function';\n  }\n\n  @return $function;\n}\n","// Utilities\n// =========\n\n$_LOCAL-FUNCTIONS: (\n  'add', 'plus',\n  'minus', 'subtract',\n  'times', 'multiply',\n  'divide'\n);\n\n\n// Get Function\n// ------------\n/// Get a first-class function in Sass 3.5+,\n/// or the function name string (unchanged)\n/// in older Sass versions.\n/// This is safe to use internally,\n/// as it allows users to pass in\n/// either a string, or a previously-captured function.\n///\n/// @access private\n///\n/// @param {string | function} $function -\n///   The name (string) of a function,\n///   or the function to be called.\n/// @return {string | function} -\n///   Returns a first-class function in Sass 3.5+,\n///   or the function name string in older Sass versions.\n@function _ac-scale-get-function(\n  $function\n) {\n  $type: type-of($function);\n\n  @if ($type == 'function') {\n    @return $function;\n  }\n\n  @if ($type == 'string') and function-exists('get-function') {\n    @if index($_LOCAL-FUNCTIONS, $function) {\n      @return get-function($function);\n    }\n\n    @error '[#{$type}] `#{$function}` must be a first-class function';\n  }\n\n  @return $function;\n}\n\n\n// Format String\n// -------------\n/// Define your own format-string\n/// for building `calc(%s + %s) ('root', 'rhythm')` recipies.\n///\n/// @group config\n/// @type string\n///\n/// @example scss -\n///   $ac-format-string: '@@@';\n$ac-format-string: '%s';\n\n\n// String Replace\n// --------------\n/// Return a string, with a substring replaced\n///\n/// @access private\n///\n/// @param {string} $string -\n///   The original string to be edited\n/// @param {string} $old -\n///   A sub-string to replace\n/// @param {string} $new -\n///   A new sub-string to replace the old\n/// @return {string} -\n///   Original string, with substring replaced\n@function _ac-str-replace(\n  $string,\n  $old,\n  $new: null,\n  $replace-all: false\n) {\n  $return: $string;\n  $i: str-index($string, $old);\n  $n: str-length($old);\n\n  @if $string == $old {\n    $return: $new;\n  } @else if $i {\n    $a: if($i > 1, str-slice($string, 1, $i - 1), '');\n    $z: str-slice($string, $i + $n);\n\n    @if $replace-all {\n      $z: _ac-str-replace($z, $old, $new, true);\n    }\n\n    $return: $a + if($new, $new, '') + $z;\n  }\n\n  @return $return;\n}\n\n\n// Interpolate\n// -----------\n/// Return a string with interpolated values\n/// replacing `%s` format strings\n///\n/// @access private\n///\n/// @param {string} $string -\n///   The original string to be edited\n/// @param {strings} $values... -\n///   New strings, to replace the `%s` format strings\n/// @return {string} -\n///   Original string, with `%s` format strings replaced\n@function _ac-interpolate(\n  $string,\n  $values...\n) {\n  $_return: $string;\n\n  @each $val in $values {\n    @if str-index($_return, $ac-format-string) {\n      $_return: _ac-str-replace($_return, $ac-format-string, $val);\n    } @else {\n      @warn 'Too many values passed for interpolation with \"#{$string}\".';\n    }\n  }\n\n  @return $_return;\n}\n","// Base API\n// ========\n\n\n// Size [function]\n// ---------------\n/// Access a named size in your `$sizes` map,\n/// using any comparable units.\n///\n/// @group sizes\n///\n/// @param {string | length | list} $size -\n///   The name of a size in your configuration (e.g. `line-height`),\n///   or a length to be converted into different units (e.g. `24px`),\n///   or a base-size and adjustments to be made\n///   (e.g. `24px ('minor-third': 2)`),\n///   or a `calc(%s + %s) ('root', 'rhythm')` recipie\n///   for building `calc` values.\n///   For the sake of consistent documentation,\n///   I recommend keeping adjustments in the configuration\n///   whenever possible.\n/// @param {vararg} $unit... -\n///   The desired unit for the output (e.g. `px` or `rem`),\n///   and any other arguments required for the conversion.\n/// @return {length} -\n///   The calculated length, in the requested units.\n@function size(\n  $size,\n  $unit...\n) {\n  $size: _ac-scale-get-size($size);\n  $size: if(length($unit) > 0, convert-units($size, $unit...), $size);\n\n  @return $size;\n}\n\n\n// Negative [function]\n// -------------------\n/// Return the negative value of any length,\n/// in comparable units.\n///\n/// @group sizes\n///\n/// @param {string | length | list} $size -\n///   The name of a size in your configuration (e.g. `line-height`),\n///   or a length to be converted into different units (e.g. `24px`),\n///   or a base-size and adjustments to be made\n///   (e.g. `24px ('minor-third': 2)`).\n///   For the sake of consistent documentation,\n///   I recommend keeping adjustments in the configuration\n///   whenever possible.\n/// @param {vararg} $unit... -\n///   The desired unit for the output (e.g. `px` or `rem`),\n///   and any other arguments required for the conversion.\n/// @return {length} -\n///   The calculated negative length, in the requested units.\n@function negative(\n  $size,\n  $unit...\n) {\n  @return 0 - size($size, $unit...);\n}\n\n\n// Scale [function]\n// ----------------\n/// Retrieve a scale ratio by name\n/// from either the `$_DEFAULT-RATIOS`\n/// or user `$ratios` configurations.\n///\n/// @group sizes\n///\n/// @param {string | number} $ratio -\n///   The key-name or value of a ratio\n/// @return {number} -\n///   The numeric value of a ratio\n/// @example scss\n///   /* Octave: #{ratio('octave')} */\n///   /* Fifth: #{ratio('fifth')} */\n@function ratio(\n  $ratio\n) {\n  $_ratio-options: map-merge($_DEFAULT-RATIOS, $ratios);\n  $_new-ratio: map-get($_ratio-options, $ratio) or $ratio;\n\n  @if ($ratio != $_new-ratio) and map-has-key($_ratio-options, $_new-ratio) {\n    $_new-ratio: ratio($_new-ratio);\n  }\n\n  @return $_new-ratio;\n}\n\n\n// Square [mixin]\n// --------------\n/// Create a square by setting equal CSS `height` and `width` properties\n/// with the given size & unit value.\n///\n/// @group sizes\n///\n/// @param {string | length | list} $size -\n///   The name of a size in your configuration (e.g. `line-height`),\n///   or a length to be converted into different units (e.g. `24px`),\n///   or a base-size and adjustments to be made\n///   (e.g. `24px ('minor-third': 2)`).\n///   For the sake of consistent documentation,\n///   I recommend keeping adjustments in the configuration\n///   whenever possible.\n/// @param {vararg} $unit... -\n///   The desired unit for the output (e.g. `px` or `rem`),\n///   and any other arguments required for the conversion.\n/// @output -\n///   Equal CSS height and width properties,\n///   set to the given size and units.\n@mixin square(\n  $size,\n  $unit...\n) {\n  $size: size($size, $unit...);\n\n  height: $size;\n  width: $size;\n}\n\n\n\n// Get Size\n// --------\n/// Access a named size in your `$sizes` map.\n///\n/// @access private\n///\n/// @param {string | length | list} $size -\n///   The name of a size in your configuration (e.g. `line-height`),\n///   or a length to be converted into different units (e.g. `24px`),\n///   or a base-size and adjustments to be made\n///   (e.g. `24px ('minor-third': 2)`),\n///   or a `calc(%s + %s) ('root', 'rhythm')` recipie\n///   for building `calc` values.\n///   For the sake of consistent documentation,\n///   I recommend keeping adjustments in the configuration\n///   whenever possible.\n/// @throw -\n///   The calculated value is not a valid CSS length.\n/// @return {length} -\n///   The calculated length\n@function _ac-scale-get-size(\n  $size\n) {\n  // Parse arguments\n  $size: map-get($sizes, $size) or $size;\n  $base: nth($size, 1);\n  $adjust: if(length($size) > 1, nth($size, 2), null);\n\n  // Recursive check\n  $size: if(map-has-key($sizes, $base), _ac-scale-get-size($base), $base);\n\n  // Adjustments\n  $adjust-type: type-of($adjust);\n  $calc: (type-of($size) == 'string') and (str-slice($size, 1, 5) == 'calc(');\n\n  @if (not $calc) and ($adjust-type == 'map') {\n    @each $key, $value in $adjust {\n      $size: _ac-scale-adjust-size($size, $key, $value...);\n    }\n  } @else if $calc and ($adjust-type == 'list') {\n    $values: ();\n\n    @each $value in $adjust {\n      $values: append($values, _ac-scale-get-size($value));\n    }\n\n    $size: _ac-interpolate($base, $values...);\n  }\n\n\n  // Validation\n  @if (type-of($size) == 'number') or $calc {\n    @return $size;\n  }\n\n  @error '#{$size} is not a valid length for CSS.';\n}\n\n\n\n// Adjust Size\n// -----------\n/// Calculate ratio, linear, or arbitrary adjustments\n/// to a base size.\n///\n/// @access private\n///\n/// @param {number} $size -\n///   The original size to perform adjusments on\n/// @param {string | number} $key -\n///   The adjustment to perform,\n///   given as either a numeric ratio,\n///   named ratio keyword,\n///   or function name to call.\n/// @param {arglist} $value… -\n///   Any required arguments,\n///   such as the number of times to apply a ratio,\n///   or additional information to be passed to a function.\n/// @return {number} -\n///   Results of the adjustment.\n@function _ac-scale-adjust-size(\n  $size,\n  $key,\n  $value...\n) {\n  $ratio: ratio($key);\n  $value: if(length($value) == 1, nth($value, 1), $value);\n\n  @if $ratio == 'linear' {\n    @return $size * $value;\n  } @else if (type-of($ratio) == 'number') {\n    $multiplier: _acs-pow($ratio, $value);\n    @return $size * $multiplier;\n  } @else if (type-of($key) == 'function') or function-exists($key) {\n    $function: _ac-scale-get-function($key);\n    $args: if($value, join($size, $value), $size);\n    @return call($function, $args...);\n  }\n\n  @error '#{$key} is not a valid ratio or function for adusting sizes.';\n}\n\n\n","// Hidden\n// ======\n\n\n// Is Hidden -- Position\n// ---------------------\n/// Hide an element by positioning it off the page.\n/// @group a11y\n/// @access private\n@mixin _is-hidden--position {\n  left: -9999px;\n  pointer-events: none;\n  position: absolute;\n  top: -9999px;\n}\n\n\n// Is Hidden -- Clip\n// -----------------\n/// Hide an element by clipping it in place.\n/// @group a11y\n/// @access private\n@mixin _is-hidden--clip {\n  clip: rect(1px, 1px, 1px, 1px);\n  clip-path: inset(1px 1px 1px 1px);\n  height: 1px;\n  overflow: hidden;\n  pointer-events: none;\n  position: absolute;\n  width: 1px;\n}\n\n\n// Is Hidden\n// ---------\n/// Hide an element using either the `clip` or `position` method.\n/// @group a11y\n/// @param {'clip' | 'position'} $method ['clip'] -\n///   The hiding method to use.\n@mixin is-hidden(\n  $method: 'clip'\n) {\n  @if $method == 'position' {\n    @include _is-hidden--position;\n  } @else {\n    @include _is-hidden--clip;\n  }\n}\n","// Headings\n// ========\n\n\n// Application\n// -----------\n\n[data-sassdoc='project-title'] {\n  align-items: baseline;\n  display: flex;\n  font-size: size('h1');\n  margin-left: auto;\n  margin-right: auto;\n}\n\n[data-sassdoc='project-name'] {\n  padding-left: size('half-shim');\n  padding-right: size('half-shim');\n\n  &,\n  #{$link} {\n    color: color('theme-dark');\n  }\n\n  #{$focus} {\n    color: color('focus');\n    text-decoration: none;\n  }\n}\n","// Icons\n// =====\n\n/// A data attribute for setting an icon.\n/// @group z_style-icons\n/// @icons assets/svg/ utility.macros.j2:icon\n/// @example njk\n///   {% import 'utility.macros.j2' as utility %}\n///   {{ utility.icon('menu', size='icon-small') }}\n[data-icon-size='icon-small'] {\n  @include square('icon');\n}\n","// Root Layout\n// ===========\n\nhtml,\nbody {\n  overflow-x: hidden;\n}\n","// Layout Regions\n// ==============\n\n\n[data-sassdoc-region] {\n  width: 100%;\n}\n\n\n// App\n// ---\n[data-sassdoc-region='app'] {\n  display: flex;\n  flex-direction: column;\n  height: 100%;\n  margin: 0 auto;\n  min-height: 100vh;\n  padding: 0;\n}\n\n[data-sassdoc-region='container'] {\n  @include clearfix;\n  display: flex;\n  flex: 1 1 auto;\n  position: relative;\n\n  @include above('page') {\n    justify-content: flex-end;\n  }\n}\n\n// Navigation\n// ----------\n[data-nav-menu] {\n  @include contrasted('theme-dark');\n  @include z-index('sidebar');\n  margin: 0;\n  padding: size('gutter');\n  white-space: nowrap;\n}\n\n[data-sassdoc-region='breadcrumb'] {\n  background: color('theme-light');\n  padding: size('shim') size('flex-gutter');\n\n  @include below('nav-medium') {\n    padding-top: size('flex-gutter');\n  }\n\n  a,\n  span,\n  strong {\n    display: inline-block;\n  }\n}\n\n\n// Page\n// ----\n[role='main'] {\n  @include z-index('main');\n  width: 100%;\n\n  @include above('page') {\n    overflow: hidden;\n  }\n}\n\n[data-sassdoc-region='main'] {\n  padding: size('gutter') size('flex-gutter');\n  position: relative;\n}\n","// Clearfix\n// ========\n\n\n// Cleafix\n// -------\n/// A small, unobtrusive clearfix for float containers.\n///\n/// @group clearfix\n///\n/// @example scss\n///   body {\n///     @include clearfix;\n///   }\n@mixin clearfix {\n  &::after {\n    clear: both;\n    content: ' ';\n    display: block;\n  }\n}\n","// Media Queries\n// =============\n\n\n// Breakpoints\n// -----------\n/// Establish a map of named breakpoints.\n///\n/// If you have [Accoutrement-Scale](http://oddbird.net/accoutrement-scale/)\n/// installed, you can use the scale syntax\n/// for describing size-relationships and adjustments –\n/// and even reference `$sizes` as though they are `$breakpoints`.\n/// Otherwise, the map should contain only valid CSS length values.\n///\n/// @group queries\n///\n/// @example scss - defining breakpoints\n///   $breakpoints: (\n///     'small': 30em,\n///     'medium': 45em,\n///   );\n/// @example scss - using accoutrement-scale\n///   $breakpoints: (\n///     'small': 30em ('convert-units': 'browser-ems'),\n///     'medium': 'small' ('times': 1.5),\n///   );\n$breakpoints: () !default;\n\n\n\n// Below [mixin]\n// -------------\n/// Generate a max–<`width`/`height`> query,\n/// for styling elements below the given viewport width.\n/// To help with overlapping min/max queries,\n/// we remove `1px` (or `0.01em`) from every max value\n/// to avoid media-query overlap.\n///\n/// @group queries\n///\n/// @link https://zellwk.com/blog/media-query-units/ PX, EM, or REM Media Queries?\n/// @link http://tzi.fr/css/prevent-double-breakpoint Prevent Double Breakpoints\n///\n/// @param {length | string} $max -\n///   The name of a documented breakpoint/size,\n///   or an arbitarty length to use in the query.\n/// @param {'width' | 'height'} $prop ['width'] -\n///   The property (width or height) to test against,\n///   for a result of e.g. `(max-width: 30em)`.\n///\n/// @example scss -\n///   @include below(30em) {\n///     html { background: red; }\n///   }\n/// @example scss -\n///   $breakpoints: ('red': 30em);\n///\n///   @include below('red') {\n///     html { background: red; }\n///   }\n@mixin below(\n  $max,\n  $prop: 'width'\n) {\n  $value: _get-breakpoint($max);\n  $value: _fix-max($value);\n\n  @media (max-#{$prop}: #{$value}) {\n    @content;\n  }\n}\n\n\n\n// Above [mixin]\n// -------------\n/// Generate a min-<`width`/`height`> query,\n/// for styling elements above the given viewport width.\n///\n/// @group queries\n///\n/// @param {length | string} $min -\n///   The name of a documented breakpoint/size,\n///   or an arbitarty length to use in the query.\n/// @param {'width' | 'height'} $prop ['width'] -\n///   The property (width or height) to test against,\n///   for a result of e.g. `(min-width: 30em)`.\n///\n/// @example scss -\n///   @include above(50em) {\n///     html { background: green; }\n///   }\n/// @example scss -\n///   $breakpoints: ('green': 50em);\n///\n///   @include above('green') {\n///     html { background: green; }\n///   }\n@mixin above(\n  $min,\n  $prop: 'width'\n) {\n  $value: _get-breakpoint($min);\n\n  @media (min-#{$prop}: #{$value}) {\n    @content;\n  }\n}\n\n\n\n// Between [mixin]\n// ---------------\n/// Generate a min-and-max-<`width`/`height`> query,\n/// for styling elements between given viewport widths.\n/// To help with overlapping min/max queries,\n/// we remove `1px` (or `0.01em`) from every max value\n/// to avoid media-query overlap.\n///\n/// @group queries\n///\n/// @link https://zellwk.com/blog/media-query-units/ PX, EM, or REM Media Queries?\n/// @link http://tzi.fr/css/prevent-double-breakpoint Prevent Double Breakpoints\n///\n/// @param {length | string} $min -\n///   The name of a documented breakpoint/size,\n///   or an arbitarty length to use as a minimum in the query.\n/// @param {length | string} $max -\n///   The name of a documented breakpoint/size,\n///   or an arbitarty length to use as a maximum in the query.\n/// @param {'width' | 'height'} $prop ['width'] -\n///   The property (width or height) to test against,\n///   for a result of e.g. `(min-width: 30em)`.\n///\n/// @example scss -\n///   @include between(30em, 50em) {\n///     html { background: yellow; }\n///   }\n/// @example scss -\n///   $breakpoints: (\n///     'red': 30em,\n///     'green': 50em,\n///   );\n///\n///   @include between('red', 'green') {\n///     html { background: yellow; }\n///   }\n@mixin between(\n  $min,\n  $max,\n  $prop: 'width'\n) {\n  $value-min: _get-breakpoint($min);\n  $value-max: _get-breakpoint($max);\n  $value-max: _fix-max($value-max);\n\n  @media (min-#{$prop}: #{$value-min}) and (max-#{$prop}: #{$value-max}) {\n    @content;\n  }\n}\n","// Z-Index\n// =======\n\n\n// Z-Index\n// -------\n/// A list of named z-index layers, from lowest to highest index.\n/// Nest lists (one level only) to establish a new z-index context:\n/// The first item will be indexed based on top-level list position,\n/// while additional values are indexed\n/// by their position in the nested list.\n///\n/// @group z-index\n/// @type list\n///\n/// @example scss -\n///   $z-index: (\n///     'main', // 1\n///     'sidebar', // 2\n///     'banner' 'active-nav' 'dropdown', // 3 1 2\n///     'message', // 4\n///     'modal', // 5\n///   );\n$z-index: ();\n\n\n// Z-Index [function]\n// ------------------\n/// Return the numeric index of a named layer in your `$z-index` variable.\n///\n/// @group z-index\n///\n/// @param {string} $layer -\n///   The name of a z-index layer in your configuration.\n/// @require {variable} $z-index\n/// @return {number} -\n///   The z-index value associated with the given layer in your configuration.\n@function z-index(\n  $layer\n) {\n  $index: index($z-index, $layer);\n  $nested: null;\n\n  @if $index {\n    @return $index;\n  } @else {\n    @for $i from 1 through length($z-index) {\n      $stack: nth($z-index, $i);\n      $index: $i;\n      $nested: index($stack, $layer);\n\n      @if type-of($nested) == 'number' {\n        @if $nested == 1 {\n          @return $index;\n        } @else if $nested > 1 {\n          @return $nested - 1;\n        }\n      }\n    }\n  }\n\n  @if type-of($layer) != 'number' {\n    @error '#{$layer} is not a valid z-index.';\n  }\n\n  @return $layer;\n}\n\n\n// Z-Index [mixin]\n// ---------------\n/// Output the `z-index` property and value of a given layer\n/// in your `$z-index` configuration.\n/// @group z-index\n/// @param {string} $layer -\n///   The name of a z-index layer in your configuration.\n/// @output -\n///   The z-index property with a value based on your configuration.\n@mixin z-index(\n  $layer\n) {\n  z-index: z-index($layer);\n}\n","// Unit Helpers\n// ------------\n\n\n// Get PX [function]\n// -----------------\n/// If a value can be converted to px by Sass, do it.\n///\n/// @access private\n///\n/// @param {number} $length -\n///   The number to be converted to px if comparable.\n/// @return {number | false} -\n///   Either the `px` value of the converted `$length` or `false`.\n@function _get-px(\n  $length\n) {\n  @return if(comparable($length, 1px), 0px + $length, false);\n}\n\n\n// Get Number [function]\n// ---------------------\n/// Get a `0`-value for any absolute unit.\n///\n/// @access private\n///\n/// @param {string} $unit -\n///   The unit to return as a number.\n/// @return {number | false} -\n///   Either the `0` value of a unit or `false`.\n@function _get-number(\n  $unit,\n  $relative: false\n) {\n  $_absolute: (\n    'in': 0in,\n    'mm': 0mm,\n    'cm': 0cm,\n    'pt': 0pt,\n    'pc': 0pc,\n    'px': 0px,\n  );\n\n  $_relative: (\n    'em': 0em,\n    'rem': 0rem,\n    '%': 0%,\n    'ex': 0ex,\n    'ch': 0ch,\n    'vw': 0vw,\n    'vh': 0vh,\n    'vmin': 0vmin,\n    'vmax': 0vmax,\n    'fr': 0fr,\n  );\n\n  @if $relative {\n    @return map-get($_absolute, $unit) or map-get($_relative, $unit);\n  }\n\n  @return map-get($_absolute, $unit);\n}\n\n\n// Convert Units [function]\n// ------------------------\n/// Convert lengths between comparable units.\n/// You can also convert to `browser-ems`,\n/// relative to the browser default rather than the site root –\n/// useful for media-quesries.\n///\n/// @group units\n///\n/// @param {length | string} $length -\n///   The length or named size to be converted.\n/// @param {string} $to-unit -\n///   The desired units to convert to.\n///   Some units (`ch`, `vw`, `vh`, `vmin`, `vmax`) cannot be converted.\n/// @param {length | string} $from-context ['root' setting or 16px] -\n///   When converting from relative units,\n///   the absolute length (in px) to which $length refers -\n///   e.g. for `$lengths` in em units, would normally be the\n///   font-size of the current element.\n/// @param {length | string} $to-context [$from-context] -\n///   For converting *to* relative units,\n///   the absolute length in px to which the output value will refer.\n///   Defaults to the same as `$from-context`, since it is rarely needed.\n@function convert-units(\n  $length,\n  $to-unit,\n  $from-context: map-get($sizes, 'root') or $_BROWSER-DEFAULT-FONT-SIZE,\n  $to-context: $from-context\n) {\n  $_convertable: ('in', 'mm', 'cm', 'pt', 'pc', 'px', 'em', 'rem', '%', 'ex');\n\n  $length: _ac-scale-get-size($length);\n  $from-context: _ac-scale-get-size($from-context);\n  $to-context: _ac-scale-get-size($to-context);\n\n  $from-unit: unit($length);\n\n  // Special conversion for browser-default ems (needed in media-queries)\n  @if ($to-unit == 'browser-ems') {\n    $size: convert-units($length, 'px', $from-context);\n    @return $size / $_BROWSER-DEFAULT-FONT-SIZE * 1em;\n  }\n\n  // No conversion needed\n  @if ($from-unit == $to-unit) {\n    @return $length;\n  }\n\n  @if ($from-unit == '') {\n    @return _get-number($to-unit, 'allow-relative') + $length;\n  } @else if ($to-unit == '') {\n    @return $length / ($length * 0 + 1);\n  }\n\n  // Warn and escape when units are not convertable\n  @each $units in ($from-unit, $to-unit) {\n    @if not index($_convertable, $units) {\n      @warn '`#{$units}` units can not be reliably converted; Returning original value.';\n      @return $length;\n    }\n  }\n\n  // Optomize comparable (non-relative) units\n  $absolute-output: _get-number($to-unit);\n\n  @if $absolute-output and comparable($length, $absolute-output)  {\n    @return $absolute-output + $length;\n  }\n\n  // Establish relative context\n  $root-size: map-get($sizes, 'root') or $_BROWSER-DEFAULT-FONT-SIZE;\n  $root-size: _ac-scale-get-size($root-size);\n  $root-size: _get-px($root-size);\n  $from-context: _get-px($from-context);\n  $to-context: _get-px($to-context);\n\n  // Context values must be in px\n  @if (not $from-context) or (not $to-context) {\n    @error 'Context paremeters must resolve to a value in pixel units.';\n  }\n\n  // Convert relative length to pixels\n  $px-length: _get-px($length) or $length;\n  $from-unit: unit($px-length);\n\n  // Convert relative units using the from-context parameter.\n  @if $from-unit == 'em' {\n    $px-length: $length * $from-context / 1em;\n  } @else if $from-unit == 'rem' {\n    $px-length: $length * $root-size / 1rem;\n  } @else if $from-unit == '%' {\n    $px-length: $length * $from-context / 100%;\n  } @else if $from-unit == 'ex'  {\n    $px-length: $length * $from-context / 2ex;\n  }\n\n  // Convert length in pixels to the output unit\n  @if $absolute-output {\n    @return $absolute-output + $px-length;\n  } @else if $to-unit == 'em' {\n    @return $px-length * 1em / $to-context;\n  } @else if $to-unit == 'rem' {\n    @return $px-length * 1rem / $root-size;\n  } @else if $to-unit == '%' {\n    @return $px-length * 100% / $to-context;\n  } @else if $to-unit == 'ex' {\n    @return $px-length * 2ex / $to-context;\n  }\n\n  @error 'Failed to convert #{$length} into #{$to-units}.';\n}\n","// Typography Styles\n// =================\n\n\n/// Style a block of rendered html-text,\n/// with line-length and typographic styles.\n/// @group z_style-typography\n.text-block {\n  max-width: 90ch;\n\n  h1,\n  h2,\n  h3,\n  h4 {\n    color: color('black');\n    margin-bottom: size('shim');\n  }\n\n  h1 {\n    font-size: size('h2');\n  }\n\n  h2 {\n    font-size: size('h3');\n  }\n\n  p {\n    margin: size('shim') 0 size('gutter');\n  }\n\n  ol,\n  ul {\n    margin: size('shim') size('gutter') size('gutter');\n  }\n\n  li {\n    > p {\n      margin: size('half-shim') 0;\n    }\n  }\n\n  blockquote {\n    border-left: size('half-shim') solid color('light-border');\n    font-size: size('quote');\n    padding-left: size('shim') + size('half-shim');\n\n    > :first-child {\n      text-indent: -0.4em;\n    }\n\n    > :nth-last-child(2) {\n      margin-bottom: size('shim');\n    }\n\n    > :last-child {\n      margin-top: size('shim');\n    }\n\n    cite {\n      display: block;\n      font-size: size('small');\n    }\n  }\n}\n","// Color API\n// =========\n\n\n// Color\n// -----\n/// The primary function for\n/// accessing colors in your palette,\n/// or making adjustments on the fly.\n///\n/// This is more than a wrapper for `map-get($colors, $x)`.\n/// It also handles internal color-references, recursion,\n/// and functional color-adjustments.\n/// It has access to the global `$colors` map by default,\n/// but you can also pass in arbitrary color-palette maps as well.\n///\n/// @group colors\n///\n/// @parameter {string | list} $color -\n///   The name of a color in your palette,\n///   or a color description in the\n///   [map configuration format](config.html).\n///\n/// @parameter {map} $palette [$colors] -\n///   Optional map containing the source color-palette.\n///   Defaults to the global `$colors` map.\n///\n/// @return {color} -\n///   A calculated css-ready color,\n///   based on your global color palette and adjustments.\n///\n/// @example scss\n///   $colors: (\n///     'background': #eee,\n///     'text': #222,\n///   );\n///\n///   html {\n///     background: color('background');\n///     color: color('text');\n///   }\n@function color(\n  $color,\n  $palette: $colors\n) {\n  // Parse arguments\n  $color: map-get($palette, $color) or $color;\n  $base: nth($color, 1);\n  $adjust: if(length($color) > 1, nth($color, 2), ());\n\n  // Recursive check\n  $color: if(map-has-key($palette, $base), color($base, $palette), $base);\n\n  // Adjustments\n  @each $function, $value in $adjust {\n    $function: _ac-color-get-function($function);\n    $color: call($function, $color, $value...);\n  }\n\n  @return $color;\n}\n","// Banner Theme\n// ============\n\n[data-sassdoc-region='banner'] {\n  @include section-arrow;\n  @include z-index('banner');\n  box-shadow: 0 2px 2px color('shadow');\n  display: flex;\n  padding: size('shim');\n}\n\n[data-sassdoc='project-version'] {\n  @include font-family('sans');\n  color: color('text-light');\n  font-size: size('base');\n  font-weight: normal;\n}\n","// Section Arrow\n// =============\n\n/// Apply a top-border with centered down-arrow triangle,\n/// for use as a section-divider.\n/// @group z_style-sections\n/// @parameter {color | string} $color ['theme-dark'] -\n///   The color of the border/arrow line\n/// @parameter {color | string} $background ['background'] -\n///   The background color above the border/arrow,\n///   used to make it an arrow-outline rather than a solid triangle\n/// @example scss\n///   [data-styleguide='section-arrow'] {\n///     @include section-arrow;\n///   }\n/// @example html\n///   <header data-sassdoc-region=\"banner\"></header>\n@mixin section-arrow(\n  $color: 'theme-dark',\n  $background: 'background'\n) {\n  border-bottom: size('border') solid color($color);\n  display: block;\n  position: relative;\n  width: 100%;\n\n  @include wrap-content(' ') {\n    border: size('gutter') solid transparent;\n    border-bottom-width: 0;\n    border-top-color: color($color);\n    left: 50%;\n    position: absolute;\n    top: 100%;\n  }\n\n  @include before(' ') {\n    margin-top: size('border');\n    transform: translateX(-50%) translateY(-2px);\n  }\n\n  @include after(' ') {\n    border-top-color: color($background);\n    transform: translateX(-50%) translateY(-4px);\n  }\n}\n","// Pseudo Elements\n// ===============\n\n\n// Before\n// ------\n/// Add generated content `:before` an element.\n/// @group pseudo\n/// @param {String} $content -\n///   A value for the `content` property.\n@mixin before(\n  $content\n) {\n  &::before {\n    content: $content;\n    @content;\n  }\n}\n\n\n// After\n// -----\n/// Add generated content `:after` an element.\n/// @group pseudo\n/// @param {String} $content -\n///   A value for the `content` property.\n@mixin after(\n  $content\n) {\n  &::after {\n    content: $content;\n    @content;\n  }\n}\n\n\n// Wrap Content\n// ------------\n/// Add generated content `:before` and `:after` an element.\n/// @group pseudo\n/// @param {List} $content -\n///   One or two values to be used for the `content` property.\n///   A single string will be used `:before` and `:after`.\n@mixin wrap-content(\n  $content: '“' '”'\n) {\n  $_before: nth($content, 1);\n\n  &::before,\n  &::after {\n    content: $_before;\n    @content;\n  }\n\n  @if length($content) > 1 {\n    &::after { content: nth($content, 2); }\n  }\n}\n","// Item Styles\n// ===========\n\n.item {\n  margin-bottom: size('double-spacer');\n}\n\n[data-item-section] {\n  margin-bottom: size('double-gutter');\n}\n\n[data-item-section='header'] {\n  margin: size('gutter') 0;\n}\n\n.item-title {\n  font-size: size('h3');\n}\n\n.item-subtitle {\n  border-bottom: 1px solid color('light-border');\n  color: color('text-light');\n  font-size: size('small');\n  font-weight: normal;\n  letter-spacing: 0.05em;\n  margin-bottom: size('shim');\n  text-transform: uppercase;\n}\n\n.item-type,\n.item-name,\n.item-value,\n.alias-title {\n  @include font-family('code');\n  display: inline-block;\n}\n\n.item-type,\n.item-value,\n.value-type,\n.item-note {\n  color: color('text-light');\n  display: inline-block;\n  font-weight: normal;\n}\n\n.alias {\n  color: color('text-light');\n  font-style: italic;\n}\n\n.alias-title {\n  font-style: normal;\n  font-weight: bold;\n}\n\n.param-list {\n  margin-bottom: size('shim');\n}\n\n.param-title {\n  color: color('text-light');\n  font-size: size('base');\n}\n\n.param-details {\n  margin-top: size('half-shim');\n\n  @include above('nav-medium') {\n    margin-left: size('gutter');\n  }\n}\n\n.summary-subtitle {\n  color: color('text-light');\n  margin: size('gutter') 0 size('half-shim');\n}\n\n\n// Requires\n// --------\n.requires-wrapper {\n  @include above('nav-medium') {\n    display: flex;\n\n    [data-item-section] {\n      flex: 1 1 40%;\n      max-width: 100%;\n\n      &:first-child {\n        margin-right: size('gutter');\n      }\n    }\n  }\n}\n","// Navigation Styles\n// =================\n\n\n[data-nav-menu='small'] {\n  @include position(0 null);\n  box-shadow: 0 0 size('half-shim') color('shadow');\n  transform: translatex(-102%);\n  transition: transform 0.4s;\n  width: 100%;\n\n  &[aria-expanded='true'] {\n    transform: translatex(0);\n  }\n\n  @include below('nav-small') {\n    align-content: flex-start;\n    display: flex;\n    flex-direction: row;\n    flex-wrap: wrap;\n  }\n\n  @include above('nav-small') {\n    width: auto;\n  }\n\n  @include above('page') {\n    display: none;\n  }\n}\n\n[data-nav-menu='large'] {\n  flex: 0 1 0;\n  margin-left: -100%;\n  transition: margin-left 0.4s;\n\n  &[aria-expanded='true'] {\n    margin-left: 0;\n  }\n\n  @include below('page') {\n    display: none;\n  }\n}\n\n[data-nav-toggle='small'] {\n  @include above('page') {\n    display: none;\n  }\n}\n\n[data-nav-toggle='large'] {\n  @include below('page') {\n    display: none;\n  }\n}\n\n[data-nav-toggle] {\n  fill: color('theme-dark');\n  padding: size('half-shim');\n\n  @include above('page') {\n    padding-left: size('shim');\n    padding-right:  size('shim');\n  }\n\n  #{$focus} {\n    fill: color('focus');\n  }\n}\n\n\n[data-sassdoc='nav-item'] {\n  list-style: none;\n  margin-bottom: size('shim');\n\n  @include below('nav-small') {\n    width: 50%;\n\n    &:nth-of-type(2n) {\n      padding-right: 1rem;\n    }\n  }\n}\n\n// Nav Titles\n// ----------\n[data-sassdoc='nav-title'] {\n  font-weight: bold;\n  margin: size('half-shim') 0 size('shim');\n  padding-top: size('shim');\n  width: 100%;\n\n  // add a top separator to all but the first nav-title\n  &:nth-of-type(n+2) {\n    border-top: 1px solid color('theme-light');\n    margin-top: size('gutter');\n    padding-top: size('gutter');\n  }\n}\n\n\n// Nav Links\n// ---------\n/// Navigation items, with inactive and active states.\n/// @group z_style-nav\n/// @example html\n///   <ul data-nav-menu>\n///     <li data-sassdoc=\"nav-item\">\n///       <a href=\"#\" data-sassdoc-nav=\"is-not-active\">not active</a>\n///     </li>\n///     <li data-sassdoc=\"nav-item\">\n///       <a href=\"#\" data-sassdoc-nav=\"is-active\">active</a>\n///     </li>\n///   </ul>\n[data-sassdoc-nav] {\n  #{$link} {\n    color: color('background');\n    line-height: 1.1;\n    padding-bottom: size('quarter-shim');\n    position: relative;\n    text-decoration: none;\n    transition: color 0.4s;\n\n    // Animated underlines\n    @include before('') {\n      @include position(null null 0 0);\n      background: color('theme-light');\n      height: size('nav-underline');\n      transform: scale3d(0, 1, 1);\n      transform-origin: center left;\n      transition: transform 0.4s cubic-bezier(0.22, 0.61, 0.36, 1);\n      transition-delay: 0.2s;\n      width: 100%;\n    }\n  }\n\n  #{$focus} {\n    @include before('') {\n      transform: scale3d(1, 1, 1);\n      transition-delay: 0s;\n    }\n  }\n\n  &[data-sassdoc-nav='is-active'] {\n    #{$link},\n    #{$focus} {\n      @include before('') {\n        transform: scale3d(1, 1, 1);\n        transition-delay: 0s;\n      }\n    }\n  }\n}\n","// Position Utility\n// ================\n\n\n// Position\n// --------\n/// Shortcut for positioning an element,\n/// using the common `top right bottom left` (TRBL) syntax,\n/// where a single value will be used for all sides,\n/// two values will set vertical/horizontal,\n/// and three values will set top/horizontal/bottom values.\n/// Use `null` for a value to keep it from displaying,\n/// and `auto` or `initial` to reset a given value.\n///\n/// @group position\n///\n/// @param {list} $position [null] -\n///   A shorthand-syntax of positioning values\n///   using the common TRBL pattern,\n///   e.g. `absolute 0 0 3em auto` or `fixed 0 2%`.\n///   The position value (absolute, relative, etc)\n///   defaults to `absolute`.\n/// @output `top`, `right`, `bottom`, `left`, and `position` properties\n///\n/// @example scss - stretch over the full viewport\n///   .overlay {\n///     @include position(fixed 0);\n///   }\n/// @example scss - top right offset (absolute positioning implied)\n///   .overlay {\n///     @include position(2em 2em auto auto);\n///   }\n/// @example scss - vertical offset without horizontal output\n///   .overlay {\n///     @include position(2em null);\n///   }\n@mixin position(\n  $position: null\n) {\n  $sides: ();\n  $type: 'absolute';\n\n  // Syntax parsing\n  @each $item in $position {\n    @if (type-of($item) == 'number') or index('auto' null, $item) {\n      $sides: append($sides, $item);\n    } @else if index('absolute' 'fixed' 'relative' 'static', $item) {\n      $type: $item;\n    } @else {\n      @error 'Unknown positioning value: #{$item}';\n    }\n  }\n\n  // TRBL logic\n  $length: length($sides);\n  $top: if($length > 0, nth($sides, 1), null);\n  $right: if($length > 1, nth($sides, 2), $top);\n  $bottom: if($length > 2, nth($sides, 3), $top);\n  $left: if($length > 3, nth($sides, 4), $right);\n\n  // CSS Output\n  bottom: $bottom;\n  left: $left;\n  position: unquote($type);\n  right: $right;\n  top: $top;\n}\n","// Project Meta Styles\n// ===================\n\n\n.project-links {\n  display: flex;\n  justify-content: flex-end;\n  margin-left: 0;\n  margin-right: 0;\n\n  @include below('project-link-nav') {\n    margin-bottom: size('shim');\n  }\n}\n\n.project-link-item {\n  display: flex;\n  list-style: none;\n\n  & + & {\n    margin-left: size('shim');\n  }\n}\n\n.project-link-start {\n  @include below('project-link-nav') {\n    margin-right: auto;\n  }\n}\n\n.project-link {\n  border: 1px solid color('theme-dark');\n  border-radius: size('gutter');\n  font-size: size('small');\n  line-height: 1.6;\n  padding: size('half-shim') size('gutter');\n  text-align: center;\n  transition: background-color 0.4s;\n\n  #{$focus} {\n    @include contrasted('theme-dark');\n    text-decoration: none;\n  }\n}\n","// Preview Layouts\n// ===============\n\n\n// Color Preview\n// -------------\n\n.color-palette {\n  display: flex;\n  flex-wrap: wrap;\n  margin: negative('shim');\n\n  @supports (display: grid) {\n    display: grid;\n    grid-auto-rows: auto;\n    grid-gap: size('gutter'); // sass-lint:disable-line no-misspelled-properties\n    grid-template-columns: repeat(auto-fit, minmax(size('color-preview'), 1fr));\n    margin: 0;\n  }\n}\n\n.color-preview {\n  align-items: stretch;\n  display: flex;\n  flex: 1 0 size('color-preview');\n  flex-direction: column;\n  font-size: size('xsmall');\n  margin: size('shim');\n\n  @supports (display: grid) {\n    margin: 0;\n  }\n}\n\n\n// Color Swatch\n// ------------\n\n.color-swatch {\n  border: 1px solid color('border');\n  height: size('color-swatch');\n  min-width: size('color-swatch');\n  position: relative;\n}\n\n.transparency-grid,\n.color-overlay {\n  @include position(0);\n}\n\n.transparency-grid {\n  background: url('data:image/svg+xml;utf8,<svg version=\"1.1\" xmlns=\"http://www.w3.org/2000/svg\" x=\"0px\" y=\"0px\" viewBox=\"0 0 20 20\"><rect width=\"10\" height=\"10\"/><rect x=\"10\" y=\"10\" width=\"10\" height=\"10\"/></svg>') center repeat scroll;\n  background-size: 0.5em 0.5em;\n  left: 50%;\n}\n\n\n// Color Info\n// ----------\n\n.color-name,\n.color-value {\n  display: block;\n  padding: size('half-shim');\n}\n\n.color-name-option {\n  display: inline-block;\n}\n\n.color-value {\n  color: color('text-light');\n  font-size: size('small-code');\n  white-space: nowrap;\n\n  & + & {\n    margin-top: size('half-shim');\n  }\n}\n","// Examples\n// ========\n\n.example {\n  margin-bottom: size('gutter');\n}\n\n.example-code {\n  align-items: stretch;\n  border: 1px solid color('theme-light');\n  display: flex;\n  flex-wrap: wrap;\n  overflow: hidden;\n\n  [data-sassdoc='hljs'] {\n    margin-bottom: 0; // override the hljs margin needed for non-nested blocks\n  }\n\n  &[aria-hidden='true'] {\n    display: none;\n  }\n}\n\n.code-block {\n  align-items: stretch;\n  display: flex;\n  flex: 1 1 20em;\n  flex-direction: column;\n  max-height: size('rhythm') * 12;\n  max-width: 100%;\n  overflow: auto;\n\n  & + & {\n    border-left: 1px solid color('theme-light');\n  }\n}\n\n.code-header {\n  @include contrasted('theme-light');\n  flex: 0 0 auto;\n  font-size: size('small');\n  padding: 0 size('shim');\n\n  + [data-sassdoc='hljs'] {\n    flex: 1 1 auto;\n  }\n}\n\n.code-description {\n  @include before(' – ');\n  font-size: size('small');\n}\n\n.example-render {\n  border: 1px solid color('light-border');\n  border-top: 0;\n  padding: size('shim');\n}\n\n.sassdoc {\n  overflow: visible;\n}\n","// Font Specimen\n// =============\n\n[data-sassdoc-font] {\n  margin: size('spacer') 0 size('gutter');\n}\n\n\n// Family\n// ------\n\n[data-sassdoc='font-type'] {\n  font-size: size('h3');\n  font-weight: bold;\n}\n\n[data-sassdoc='font-stack'] {\n  @include font-family('code');\n  font-size: size('small');\n}\n\n\n// Face\n// ----\n\n[data-specimen-face] {\n  margin: size('shim') 0;\n}\n\n[data-specimen='sample'] {\n  align-items: center;\n  display: flex;\n  flex-wrap: wrap;\n  justify-content: space-between;\n}\n\n[data-specimen='aa'],\n[data-specimen='lorem'] {\n  padding: 0 size('shim');\n}\n\n[data-specimen='aa'] {\n  flex: 0 1 auto;\n  font-size: size('specimen');\n}\n\n[data-specimen='lorem'] {\n  flex: 1 1 auto;\n\n  span {\n    display: block;\n  }\n}\n","// Syntax Highlighting\n// ===================\n// Orginal Style from ethanschoonover.com/solarized\n// (c) Jeremy Hull <sourdrums@gmail.com>\n// sass-lint:disable force-element-nesting, class-name-format, indentation\n\n\n// hljs colors\n// -----------\n/// A map of colors for code-highlighting\n/// @group z_style-code\n/// @access private\n/// @type map\n$hljs-colors: (\n  'hljs-background': 'slight',\n  'hljs-text': 'code',\n  'hljs-comment': #93a1a1,\n  'hljs-green': #859900,\n  'hljs-cyan': #2aa198,\n  'hljs-blue': #268bd2,\n  'hljs-yellow': #b58900,\n  'hljs-orange': #cb4b16,\n  'hljs-red': #dc322f,\n  'hljs-formula': #eee8d5,\n  'hljs-shadow': 'code-shadow',\n);\n\n@include config('colors', 'hljs-colors', $hljs-colors);\n\n\n// hljs-gradient\n// -------------\n/// Creates a faux-background gradient\n/// to overlay the edges of a code-block,\n/// so code-overflow is more obvious.\n/// @group z_style-code\n/// @access private\n/// @see {css} Code Blocks\n/// @parameter {string} $direction -\n///   Any valid gradient direction, e.g. `to top`\n/// @parameter {string} $small [false] -\n///   Use a smaller gradient for vertical/left overflow\n/// @return {background-image} -\n///   A linear-gradient with the appropriate color-stops\n@function hljs-gradient(\n  $direction,\n  $small: false\n) {\n  $color: color('hljs-background');\n  $dir: unquote($direction);\n  $first: if($small, size('quarter-shim'), size('half-shim'));\n  $second: if($small, size('shim'), size('gutter') + size('shim'));\n\n  @return linear-gradient($dir, $color $first, rgba($color, 0) $second);\n}\n\n\n// Code Blocks\n/// @name Code Blocks\n/// @group z_style-code\n/// @access private\n/// @requires {function} hljs-gradient\n[data-sassdoc='hljs'],\n.text-block pre {\n  align-items: stretch;\n  background-color: color('hljs-background');\n  color: color('hljs-text');\n  display: flex;\n  position: relative;\n\n  code {\n    flex: 0 0 100%;\n    overflow-x: auto;\n    padding: size('shim');\n    padding-right: size('gutter');\n  }\n\n  @include before(' ') {\n    @include position(0);\n    background:\n      hljs-gradient('to top', 'small'),\n      hljs-gradient('to right', 'small'),\n      hljs-gradient('to bottom', 'small'),\n      hljs-gradient('to left') no-repeat scroll;\n    box-shadow: 0 0 size('half-shim') color('hljs-shadow') inset;\n    pointer-events: none;\n  }\n}\n\n[data-sassdoc-page='index'] pre {\n  margin-bottom: size('gutter');\n}\n\n.hljs-comment,\n.hljs-quote {\n  color: color('hljs-comment');\n}\n\n// Solarized Green\n.hljs-keyword,\n.hljs-selector-tag,\n.hljs-addition {\n  color: color('hljs-green');\n}\n\n// Solarized Cyan\n.hljs-number,\n.hljs-string,\n.hljs-meta .hljs-meta-string,\n.hljs-literal,\n.hljs-doctag,\n.hljs-regexp {\n  color: color('hljs-cyan');\n}\n\n// Solarized Blue\n.hljs-title,\n.hljs-section,\n.hljs-name,\n.hljs-selector-id,\n.hljs-selector-class {\n  color: color('hljs-blue');\n}\n\n// Solarized Yellow\n.hljs-attribute,\n.hljs-attr,\n.hljs-variable,\n.hljs-template-variable,\n.hljs-class .hljs-title,\n.hljs-type {\n  color: color('hljs-yellow');\n}\n\n// Solarized Orange\n.hljs-symbol,\n.hljs-bullet,\n.hljs-subst,\n.hljs-meta,\n.hljs-meta .hljs-keyword,\n.hljs-selector-attr,\n.hljs-selector-pseudo,\n.hljs-link {\n  color: color('hljs-orange');\n}\n\n// Solarized Red\n.hljs-built_in,\n.hljs-deletion {\n  color: color('hljs-red');\n}\n\n.hljs-formula {\n  background: color('hljs-formula');\n}\n\n.hljs-emphasis {\n  font-style: italic;\n}\n\n.hljs-strong {\n  font-weight: bold;\n}\n","// Icon Preview\n// ============\n\n[data-sassdoc='icon-preview'] {\n  display: flex;\n  flex-wrap: wrap;\n  justify-content: space-between;\n  margin: size('gutter') negative('shim');\n}\n\n[data-sassdoc-icon] {\n  color: color('text-light');\n  flex: 1 1 15%;\n  margin: size('gutter') size('shim');\n  min-width: size('rhythm') * 5;\n\n  [data-icon] {\n    @include square('h1');\n  }\n}\n\n[data-sassdoc='icon-info'] {\n  font-size: size('small');\n  padding: size('half-shim') 0;\n  white-space: nowrap;\n}\n\n[data-sassdoc='icon-name'] {\n  color: color('text');\n  font-weight: bold;\n  text-transform: uppercase;\n}\n\n[data-sassdoc='icon-path'] {\n  @include font-family('code');\n}\n","// Ratio Preview\n// =============\n\n[data-sassdoc='ratio-demos'] {\n  line-height: 1.2;\n  overflow-x: auto;\n  padding: size('half-shim');\n  white-space: nowrap;\n}\n\n\n// Size Preview\n// ------------\n\n[data-sassdoc='size-demos'] {\n  margin-bottom: size('gutter');\n}\n\n[data-sassdoc='size-details'] {\n  @include font-family('code');\n  font-size: size('small');\n}\n\n[data-sassdoc='size-value'] {\n  color: color('text-light');\n}\n\n[data-size-demo] {\n  margin-bottom: size('shim');\n}\n\n[data-size-demo='text'] {\n  overflow: hidden;\n  padding: size('half-shim');\n  white-space: nowrap;\n}\n\n[data-size-demo='ruler'] {\n  background: linear-gradient(to right, currentColor 50%, transparent 50%);\n  background-size: 2em auto;\n  height: 1em;\n}\n"]}